name: Force Publish to Crates.io

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (must match Cargo.toml)'
        required: true
        type: string

jobs:
  force-publish:
    name: Force Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      
      - name: Verify version matches
        run: |
          CARGO_VERSION=$(grep '^version =' Cargo.toml | head -n 1 | cut -d '"' -f 2)
          if [ "$CARGO_VERSION" != "${{ inputs.version }}" ]; then
            echo "Error: Version in Cargo.toml ($CARGO_VERSION) does not match input version (${{ inputs.version }})"
            exit 1
          fi
          echo "Version validated: $CARGO_VERSION"
      
      - name: Update registry
        run: cargo update
      
      - name: Force publish to crates.io
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 5
          retry_wait_seconds: 45
          command: cargo publish --allow-dirty --no-verify
          on_retry_command: cargo update && sleep 45
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      
      - name: Verify package on crates.io
        run: |
          echo "Waiting for package to be available on crates.io..."
          sleep 45
          MAX_ATTEMPTS=12
          attempt=1
          
          while [ $attempt -le $MAX_ATTEMPTS ]; do
            echo "Checking attempt $attempt of $MAX_ATTEMPTS..."
            RESPONSE=$(curl -s https://crates.io/api/v1/crates/node-size-analyzer/${{ inputs.version }})
            if echo "$RESPONSE" | grep -q "\"version\":\"${{ inputs.version }}\""; then
              echo "✅ Package node-size-analyzer v${{ inputs.version }} successfully published to crates.io"
              exit 0
            fi
            
            echo "Package not found yet, waiting 30 seconds..."
            sleep 30
            attempt=$((attempt + 1))
          done
          
          echo "⚠️ Package may still be processing on crates.io. Check manually at https://crates.io/crates/node-size-analyzer"