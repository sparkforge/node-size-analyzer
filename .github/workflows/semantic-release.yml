name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/exec conventional-changelog-conventionalcommits

      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create semantic-release config
        run: |
          cat > .releaserc.json << EOF
          {
            "branches": ["main"],
            "plugins": [
              ["@semantic-release/commit-analyzer", {
                "preset": "conventionalcommits",
                "releaseRules": [
                  {"type": "feat", "release": "minor"},
                  {"type": "fix", "release": "patch"},
                  {"type": "docs", "release": "patch"},
                  {"type": "style", "release": "patch"},
                  {"type": "refactor", "release": "patch"},
                  {"type": "perf", "release": "patch"},
                  {"type": "test", "release": "patch"},
                  {"type": "build", "release": "patch"},
                  {"type": "ci", "release": "patch"},
                  {"type": "chore", "release": "patch"},
                  {"scope": "breaking", "release": "major"}
                ]
              }],
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              ["@semantic-release/exec", {
                "prepareCmd": "sed -i 's/^version = \".*\"/version = \"${nextRelease.version}\"/' Cargo.toml"
              }],
              ["@semantic-release/git", {
                "assets": ["Cargo.toml", "CHANGELOG.md"],
                "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
              }],
              "@semantic-release/github"
            ]
          }
          EOF

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  # This job will be triggered by the tag created by semantic-release
  trigger-release:
    name: Trigger Release Workflow
    needs: semantic-release
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Sleep for 10 seconds
        run: sleep 10
        shell: bash

      # No action needed here, the release.yml workflow will be triggered automatically 
      # by the tag created in the semantic-release job
      - name: Notify completion
        run: echo "Semantic release complete. Release workflow should be triggered automatically."