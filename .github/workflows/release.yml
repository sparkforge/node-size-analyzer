name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: node-size
            asset_name: node-size-linux
          - os: windows-latest
            artifact_name: node-size.exe
            asset_name: node-size-windows.exe
          - os: macos-latest
            artifact_name: node-size
            asset_name: node-size-macos

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - run: cargo build --release

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        shell: bash

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/${{ matrix.artifact_name }}
          name: Release v${{ env.VERSION }}
          body_path: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}

  crates:
    name: Publish to crates.io
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        shell: bash
          
      - name: Update crates.io registry
        run: cargo update
          
      - name: Check if package is publishable
        run: cargo publish --dry-run
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          
      - name: Verify version matches tag
        run: |
          CARGO_VERSION=$(grep '^version =' Cargo.toml | head -n 1 | cut -d '"' -f 2)
          if [ "$CARGO_VERSION" != "$VERSION" ]; then
            echo "Error: Version in Cargo.toml ($CARGO_VERSION) does not match tag version ($VERSION)"
            exit 1
          fi
          echo "Version validated: $VERSION"
          
      - name: Publish to crates.io with retry
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: cargo publish
          on_retry_command: cargo update && sleep 30
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          
      - name: Verify package on crates.io
        run: |
          echo "Waiting for package to be available on crates.io..."
          sleep 30
          # Check if the package is available
          curl -s https://crates.io/api/v1/crates/node-size-analyzer/$VERSION | grep -q "\"version\":\"$VERSION\""
          if [ $? -eq 0 ]; then
            echo "✅ Package node-size-analyzer v$VERSION successfully published to crates.io"
          else
            echo "⚠️ Package may still be processing on crates.io. Check manually at https://crates.io/crates/node-size-analyzer"
          fi
